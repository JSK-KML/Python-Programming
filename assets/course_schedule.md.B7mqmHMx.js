import{_ as o,c as r,o as n,ag as e}from"./chunks/framework.C6oxWInS.js";const u=JSON.parse('{"title":"Course Schedule","description":"","frontmatter":{"outline":"deep","title":"Course Schedule"},"headers":[],"relativePath":"course/schedule.md","filePath":"course/schedule.md"}'),s={name:"course/schedule.md"};function d(g,t,i,l,c,a){return n(),r("div",null,t[0]||(t[0]=[e('<h1 id="cp115-course-semester-s-schedule" tabindex="-1">CP115 Course Semester&#39;s Schedule <a class="header-anchor" href="#cp115-course-semester-s-schedule" aria-label="Permalink to &quot;CP115 Course Semester&#39;s Schedule&quot;">​</a></h1><h2 id="course-schedule" tabindex="-1">Course Schedule <a class="header-anchor" href="#course-schedule" aria-label="Permalink to &quot;Course Schedule&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Week &amp; Dates</th><th>Lecture (CLO1)</th><th>Tutorial (CLO2)</th><th>Practical / Lab (CLO3)</th><th>Remark / Lab-test</th></tr></thead><tbody><tr><td><strong>1</strong> (30 Jun – 4 Jul 25)</td><td><strong>Topic 1 – Introduction to Programming</strong><br>• Identify programming concepts<br>• List 5 steps in problem solving</td><td><strong>Topic 1 – Introduction to Programming</strong><br>• Explain the 5 steps in problem solving</td><td>—</td><td>—</td></tr><tr><td><strong>2</strong> (7 – 11 Jul 25)</td><td><strong>Topic 2 – Problem Analysis</strong><br>• Define the IPO model<br>• Identify input, process, output</td><td><strong>Topic 2 – Problem Analysis</strong><br>• Apply IPO to scenarios<br>• IPO with <strong>sequence</strong></td><td><strong>Topic 1 – Introduction</strong><br>• Demonstrate design software &amp; coding platforms (Flowgorithm intro)</td><td>—</td></tr><tr><td><strong>3</strong> (14 – 18 Jul 25)</td><td><strong>Topic 2 – Problem Analysis</strong><br>• Identify <strong>sequence</strong> &amp; <strong>selection</strong> control structures</td><td><strong>Topic 2 – Problem Analysis</strong><br>• IPO with <strong>selection</strong></td><td>—</td><td>—</td></tr><tr><td><strong>4</strong> (21 – 25 Jul 25)</td><td><strong>Topic 2 – Problem Analysis</strong><br>• Identify <strong>repetition</strong> control structure</td><td><strong>Topic 2 – Problem Analysis</strong><br>• IPO with <strong>repetition</strong></td><td><strong>Problem Analysis</strong><br>• Use any control structure in software</td><td>—</td></tr><tr><td><strong>5</strong> (28 Jul – 1 Aug 25)</td><td><strong>Topic 3 – Design Solutions</strong><br>• Define algorithm, pseudocode, flowchart</td><td><strong>Topic 3 – Design Solutions</strong><br>• Describe algorithm, pseudocode, flowchart</td><td><strong>Design Solutions</strong><br>• Apply control structure in pseudocode/flowchart</td><td>31 Jul 25 – Johor holiday</td></tr><tr><td><strong>6</strong> (4 – 8 Aug 25)</td><td><strong>Topic 4 – Python Programming</strong><br>• Language types / paradigms / translators<br>• Platforms for Python</td><td><strong>Topic 3 – Design Solutions</strong><br>• Convert pseudocode ↔ flowchart</td><td><strong>Design Solutions</strong><br>• Create flowcharts from given output</td><td><strong>LAB TEST 1</strong> – Flowgorithm (<em>Selection</em>)</td></tr><tr><td><strong>7</strong> (11 – 15 Aug 25)</td><td><strong>Topic 4 – Python Programming</strong><br>• Identify Python components (ids, vars, data types, I/O, etc.)</td><td><strong>Topic 3 – Design Solutions</strong><br>• Convert pseudocode ↔ flowchart</td><td><strong>Python Programming</strong><br>• Compile &amp; run simple programs</td><td>—</td></tr><tr><td><strong>8</strong> (18 – 22 Aug 25)</td><td><strong>Topic 4 – Python Programming</strong><br>• Assignment &amp; arithmetic operators</td><td><strong>Topic 4 – Python Programming</strong><br>• Construct full Python program</td><td><strong>Python Programming</strong><br>• Construct Python programs for given problems</td><td><strong>LAB TEST 2</strong> – <em>Sequence</em></td></tr><tr><td><strong>9</strong> (25 – 29 Aug 25)</td><td><strong>Topic 5 – Sequence Control Structure</strong><br>• Choose seq/sel/rep appropriately</td><td><strong>Python Programming</strong><br>• Program with assignment &amp; arithmetic ops</td><td><strong>Sequence Control</strong><br>• IPO / pseudocode / flowchart → code (sequence)</td><td>—</td></tr><tr><td><strong>10</strong> (1 – 5 Sep 25)</td><td><strong>Topic 6 – Selection Control Structure</strong><br>• Single / dual / multiple selections</td><td><strong>Python Programming</strong><br>• Program with assignment &amp; ops<br><strong>Topic 5 – Sequence</strong><br>• Explain sequence concept</td><td><strong>Selection Control</strong><br>• IPO / pseudocode / flowchart → solution (<em>selection</em>)</td><td>1 Sep Mer​deka &amp; 5 Sep Maulidur Rasul</td></tr><tr><td><strong>11</strong> (8 – 12 Sep 25)</td><td><strong>Topic 6 – Selection Control</strong><br>• Relational &amp; logical operators</td><td><strong>Sequence Control</strong><br>• Python program using sequence structure</td><td><strong>Selection Control</strong><br>• Python program for given problem</td><td><strong>LAB TEST 3</strong> – <em>Selection</em></td></tr><tr><td><strong>Mid-Semester Break</strong> (13 – 21 Sep 25)</td><td></td><td></td><td></td><td></td></tr><tr><td><strong>12</strong> (22 – 26 Sep 25)</td><td><strong>Topic 7 – Repetition Control Structure</strong><br>• Counter- vs sentinel-controlled loops</td><td><strong>Selection Control</strong><br>• if / if-else / if-elif-else usage</td><td><strong>Repetition Control</strong><br>• IPO / pseudocode / flowchart for <strong>counter-controlled loop</strong></td><td>—</td></tr><tr><td><strong>13</strong> (29 Sep – 3 Oct 25)</td><td><strong>Topic 7 – Repetition Control</strong><br>• Construct <em>while</em> &amp; <em>for in range</em></td><td><strong>Selection Control</strong><br>• Boolean expressions in selection</td><td><strong>Repetition Control</strong><br>• IPO / pseudocode / flowchart for <strong>sentinel-controlled loop</strong></td><td>—</td></tr><tr><td><strong>14</strong> (6 – 10 Oct 25)</td><td><strong>Topic 7 – Repetition Control</strong><br>• <em>while</em> &amp; <em>for in range</em> (cont.)</td><td><strong>Selection Control</strong><br>• Logical ops, multi-condition</td><td><strong>Repetition Control</strong><br>• Counter/sentinel solution in code</td><td>—</td></tr><tr><td><strong>15</strong> (13 – 17 Oct 25)</td><td><strong>Topic 8 – Combination of Control Structures</strong><br>• Program combining seq / sel / rep</td><td><strong>Selection Control</strong><br>• Python with various selections</td><td><strong>Combination</strong><br>• Apply all control structures in problem solving</td><td>—</td></tr><tr><td><strong>16</strong> (20 – 24 Oct 25)</td><td>— <em>(Deepavali week)</em></td><td>—</td><td><strong>Combination</strong><br>• Apply all control structures in problem solving</td><td>20-22 Oct Deepavali</td></tr><tr><td><strong>17</strong> (27 – 31 Oct 25)</td><td><em>(Revision / buffer)</em></td><td>—</td><td>—</td><td>—</td></tr></tbody></table>',3)]))}const m=o(s,[["render",d]]);export{u as __pageData,m as default};
