var u=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var f=u((b,l)=>{function c(){document.readyState==="loading"?document.addEventListener("DOMContentLoaded",d):d()}function d(){console.log("Initializing sliding pill indicator...");const e=document.querySelector(".VPSidebar");if(!e){console.log("Sidebar not found, retrying in 500ms..."),setTimeout(d,500);return}e.classList.add("has-active");function t(){const n=document.querySelector(".VPSidebarItem.is-active .link");if(e.querySelector("::before"),n){console.log("Active item found, updating pill position");const s=e.getBoundingClientRect(),i=n.getBoundingClientRect().top-s.top+e.scrollTop;e.style.setProperty("--pill-top",`${i}px`),window.getComputedStyle(e,"::before").opacity==="0"&&e.classList.add("has-active")}else console.log("No active item found"),e.classList.remove("has-active")}setTimeout(t,100),typeof window<"u"&&window.__VP_ROUTER__&&(window.__VP_ROUTER__.onAfterRouteChanged=()=>{setTimeout(t,100)}),window.addEventListener("load",t),document.addEventListener("DOMContentLoaded",t),new MutationObserver(n=>{let s=!1;n.forEach(o=>{o.type==="attributes"&&o.attributeName==="class"&&o.target.classList.contains("VPSidebarItem")&&(s=!0),o.type==="childList"&&o.addedNodes.forEach(i=>{var r,a;i.nodeType===1&&((r=i.classList)!=null&&r.contains("VPSidebarItem")||(a=i.querySelector)!=null&&a.call(i,".VPSidebarItem"))&&(s=!0)})}),s&&setTimeout(t,50)}).observe(e,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["class"]}),window.addEventListener("resize",()=>{setTimeout(t,100)}),console.log("Sliding pill indicator initialized successfully!")}c();typeof l<"u"&&l.exports&&(l.exports={initSlidingPill:c,setupSlidingPill:d})});export default f();
