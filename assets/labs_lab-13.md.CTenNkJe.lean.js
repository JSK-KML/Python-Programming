import{_ as h}from"./chunks/lab-2-1.BIoSFs8y.js";import{_ as l,C as p,c as k,o as r,ag as n,G as e,j as i,a}from"./chunks/framework.CELCRrnN.js";const v=JSON.parse('{"title":"Lab 13 - Loop Control Statements","description":"","frontmatter":{"outline":"deep","title":"Lab 13 - Loop Control Statements"},"headers":[],"relativePath":"labs/lab-13.md","filePath":"labs/lab-13.md"}'),o={name:"labs/lab-13.md"},d={id:"exercise-1-password-system-with-limited-attempts",tabindex:"-1"},g={id:"exercise-2-first-divisible-number-finder",tabindex:"-1"},c={id:"exercise-3-grade-filter-with-continue",tabindex:"-1"},E={id:"exercise-4-positive-number-sum",tabindex:"-1"},y={id:"exercise-5-atm-withdrawal-validator",tabindex:"-1"},u={id:"exercise-6-movie-ticket-counter",tabindex:"-1"};function F(C,s,m,b,A,f){const t=p("Badge");return r(),k("div",null,[s[18]||(s[18]=n("",36)),e(t,{type:"tip",text:"Question"}),s[19]||(s[19]=n("",28)),i("h2",d,[s[0]||(s[0]=a("Exercise 1: Password System with Limited Attempts ",-1)),e(t,{type:"warning",text:"Task"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#exercise-1-password-system-with-limited-attempts","aria-label":'Permalink to "Exercise 1: Password System with Limited Attempts <Badge type="warning" text="Task" />"'},"​",-1))]),s[20]||(s[20]=n("",3)),i("h2",g,[s[3]||(s[3]=a("Exercise 2: First Divisible Number Finder ",-1)),e(t,{type:"warning",text:"Task"}),s[4]||(s[4]=a()),s[5]||(s[5]=i("a",{class:"header-anchor",href:"#exercise-2-first-divisible-number-finder","aria-label":'Permalink to "Exercise 2: First Divisible Number Finder <Badge type="warning" text="Task" />"'},"​",-1))]),s[21]||(s[21]=n("",3)),i("h2",c,[s[6]||(s[6]=a("Exercise 3: Grade Filter with Continue ",-1)),e(t,{type:"warning",text:"Task"}),s[7]||(s[7]=a()),s[8]||(s[8]=i("a",{class:"header-anchor",href:"#exercise-3-grade-filter-with-continue","aria-label":'Permalink to "Exercise 3: Grade Filter with Continue <Badge type="warning" text="Task" />"'},"​",-1))]),s[22]||(s[22]=n("",3)),i("h2",E,[s[9]||(s[9]=a("Exercise 4: Positive Number Sum ",-1)),e(t,{type:"warning",text:"Task"}),s[10]||(s[10]=a()),s[11]||(s[11]=i("a",{class:"header-anchor",href:"#exercise-4-positive-number-sum","aria-label":'Permalink to "Exercise 4: Positive Number Sum <Badge type="warning" text="Task" />"'},"​",-1))]),s[23]||(s[23]=n("",3)),i("h2",y,[s[12]||(s[12]=a("Exercise 5: ATM Withdrawal Validator ",-1)),e(t,{type:"warning",text:"Task"}),s[13]||(s[13]=a()),s[14]||(s[14]=i("a",{class:"header-anchor",href:"#exercise-5-atm-withdrawal-validator","aria-label":'Permalink to "Exercise 5: ATM Withdrawal Validator <Badge type="warning" text="Task" />"'},"​",-1))]),s[24]||(s[24]=n("",5)),i("h2",u,[s[15]||(s[15]=a("Exercise 6: Movie Ticket Counter ",-1)),e(t,{type:"warning",text:"Task"}),s[16]||(s[16]=a()),s[17]||(s[17]=i("a",{class:"header-anchor",href:"#exercise-6-movie-ticket-counter","aria-label":'Permalink to "Exercise 6: Movie Ticket Counter <Badge type="warning" text="Task" />"'},"​",-1))]),s[25]||(s[25]=n("",11))])}const w=l(o,[["render",F]]);export{v as __pageData,w as default};
