import{_ as a,c as n,o as i,ag as e}from"./chunks/framework.DS1FxSjF.js";const k=JSON.parse('{"title":"Dashboard Design Notes","description":"","frontmatter":{},"headers":[],"relativePath":"dashboard-design-notes.md","filePath":"dashboard-design-notes.md"}'),t={name:"dashboard-design-notes.md"};function p(l,s,h,r,o,d){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="dashboard-design-notes" tabindex="-1">Dashboard Design Notes <a class="header-anchor" href="#dashboard-design-notes" aria-label="Permalink to &quot;Dashboard Design Notes&quot;">​</a></h1><h2 id="project-overview" tabindex="-1">Project Overview <a class="header-anchor" href="#project-overview" aria-label="Permalink to &quot;Project Overview&quot;">​</a></h2><p>Design and implementation plan for a live grading dashboard that fetches student code from GitHub repositories and runs tests using Pyodide in the browser.</p><h2 id="core-concept" tabindex="-1">Core Concept <a class="header-anchor" href="#core-concept" aria-label="Permalink to &quot;Core Concept&quot;">​</a></h2><ul><li><strong>Template repository setup</strong>: Students fork teacher&#39;s template repo with complete folder structure</li><li><strong>Batch workflow</strong>: Teacher selects assignment from dropdown, dashboard fetches ALL student submissions at once</li><li><strong>Browser-based testing</strong>: All code execution happens in browser using Pyodide (Python runtime)</li><li><strong>Tabbed interface</strong>: View individual files with focused code review</li></ul><h2 id="system-architecture" tabindex="-1">System Architecture <a class="header-anchor" href="#system-architecture" aria-label="Permalink to &quot;System Architecture&quot;">​</a></h2><h3 id="folder-structure" tabindex="-1">Folder Structure <a class="header-anchor" href="#folder-structure" aria-label="Permalink to &quot;Folder Structure&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├── dashboard/                    # Dashboard feature</span></span>
<span class="line"><span>│   ├── index.md                 # Main dashboard page (/dashboard)</span></span>
<span class="line"><span>│   ├── repos.json               # Simple list of GitHub repo URLs</span></span>
<span class="line"><span>│   └── components/              # Vue components</span></span>
<span class="line"><span>│       ├── StudentGrid.vue      # Student list with status</span></span>
<span class="line"><span>│       ├── StudentCard.vue      # Individual student submission view</span></span>
<span class="line"><span>│       ├── CodeTabs.vue         # Tabbed file interface</span></span>
<span class="line"><span>│       ├── TestRunner.vue       # Pyodide execution</span></span>
<span class="line"><span>│       └── AssignmentSelector.vue # Assignment dropdown</span></span>
<span class="line"><span>├── .vitepress/</span></span>
<span class="line"><span>│   ├── config.js               # Just add dashboard nav</span></span>
<span class="line"><span>│   └── theme/</span></span>
<span class="line"><span>│       └── style.css           # Dashboard styling</span></span>
<span class="line"><span>└── [existing structure...]</span></span></code></pre></div><h3 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h3><p><strong>repos.json</strong> (set once):</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;https://github.com/johndoe/cp115-python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;https://github.com/janesmith/cp115-python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;https://github.com/bobwilson/cp115-python&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="template-repository-structure" tabindex="-1">Template Repository Structure <a class="header-anchor" href="#template-repository-structure" aria-label="Permalink to &quot;Template Repository Structure&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>template-repo/                   # Students fork this</span></span>
<span class="line"><span>├── lab-01/</span></span>
<span class="line"><span>│   ├── main.py                 # Student code</span></span>
<span class="line"><span>│   └── tests.py                # Teacher tests</span></span>
<span class="line"><span>├── lab-02/</span></span>
<span class="line"><span>│   ├── main.py</span></span>
<span class="line"><span>│   └── tests.py</span></span>
<span class="line"><span>├── lab-07/</span></span>
<span class="line"><span>│   ├── exercise1.py            # Multiple student files</span></span>
<span class="line"><span>│   ├── exercise2.py</span></span>
<span class="line"><span>│   ├── exercise3.py</span></span>
<span class="line"><span>│   └── tests.py                # Teacher tests</span></span>
<span class="line"><span>└── assignment-3/</span></span>
<span class="line"><span>    ├── solution.py</span></span>
<span class="line"><span>    └── tests.py</span></span></code></pre></div><h2 id="system-flow" tabindex="-1">System Flow <a class="header-anchor" href="#system-flow" aria-label="Permalink to &quot;System Flow&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─── USER OPENS DASHBOARD ───┐</span></span>
<span class="line"><span>│                            │</span></span>
<span class="line"><span>│  1. Load /dashboard page   │</span></span>
<span class="line"><span>│  2. Read repos.json        │</span></span>
<span class="line"><span>│     [&quot;github.com/user1/...&quot;,│</span></span>
<span class="line"><span>│      &quot;github.com/user2/...&quot;]│</span></span>
<span class="line"><span>└────────────┬───────────────┘</span></span>
<span class="line"><span>             │</span></span>
<span class="line"><span>             ▼</span></span>
<span class="line"><span>┌─── DISPLAY STUDENT LIST ───┐</span></span>
<span class="line"><span>│                            │</span></span>
<span class="line"><span>│  3. Show student grid:     │</span></span>
<span class="line"><span>│     - Student name         │</span></span>
<span class="line"><span>│     - Repo link            │</span></span>
<span class="line"><span>│     - [View Code] button   │</span></span>
<span class="line"><span>└────────────┬───────────────┘</span></span>
<span class="line"><span>             │</span></span>
<span class="line"><span>             ▼</span></span>
<span class="line"><span>┌─── ASSIGNMENT SELECTION ───┐</span></span>
<span class="line"><span>│                            │</span></span>
<span class="line"><span>│  4. Teacher selects:       │</span></span>
<span class="line"><span>│     - Assignment dropdown  │</span></span>
<span class="line"><span>│     - Triggers batch fetch │</span></span>
<span class="line"><span>└────────────┬───────────────┘</span></span>
<span class="line"><span>             │</span></span>
<span class="line"><span>             ▼</span></span>
<span class="line"><span>┌─── BATCH FETCH ALL FILES ──┐</span></span>
<span class="line"><span>│                            │</span></span>
<span class="line"><span>│  5. For each student repo: │</span></span>
<span class="line"><span>│     GET /repos/{user}/{repo}/contents/{assignment}/</span></span>
<span class="line"><span>│     → Fetch entire folder  │</span></span>
<span class="line"><span>│     → All .py files        │</span></span>
<span class="line"><span>└────────────┬───────────────┘</span></span>
<span class="line"><span>             │</span></span>
<span class="line"><span>             ▼</span></span>
<span class="line"><span>┌─── PYODIDE EXECUTION ──────┐</span></span>
<span class="line"><span>│                            │</span></span>
<span class="line"><span>│  6. Load all files into    │</span></span>
<span class="line"><span>│     Pyodide filesystem     │</span></span>
<span class="line"><span>│  7. Execute tests.py       │</span></span>
<span class="line"><span>│  8. Parse print output     │</span></span>
<span class="line"><span>└────────────┬───────────────┘</span></span>
<span class="line"><span>             │</span></span>
<span class="line"><span>             ▼</span></span>
<span class="line"><span>┌─── TABBED INTERFACE ───────┐</span></span>
<span class="line"><span>│                            │</span></span>
<span class="line"><span>│  9. Show for each student: │</span></span>
<span class="line"><span>│     • File tabs            │</span></span>
<span class="line"><span>│     • Code viewer          │</span></span>
<span class="line"><span>│     • Test results         │</span></span>
<span class="line"><span>│     • Run buttons          │</span></span>
<span class="line"><span>└────────────────────────────┘</span></span></code></pre></div><h2 id="file-fetching-logic" tabindex="-1">File Fetching Logic <a class="header-anchor" href="#file-fetching-logic" aria-label="Permalink to &quot;File Fetching Logic&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Fetch entire assignment folder</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> assignment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;lab-07&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> folderContents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetchFolder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">studentRepo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">assignment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns all files in folder:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [&quot;exercise1.py&quot;, &quot;exercise2.py&quot;, &quot;exercise3.py&quot;, &quot;tests.py&quot;]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Separate student code from tests</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> studentFiles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> folderContents.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tests.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> testFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> folderContents.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tests.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="dashboard-ui-layout" tabindex="-1">Dashboard UI Layout <a class="header-anchor" href="#dashboard-ui-layout" aria-label="Permalink to &quot;Dashboard UI Layout&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────────────────────────────────────────────────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│  🎓 CP115 Live Grading Dashboard                                                               │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│                                                                                               │</span></span>
<span class="line"><span>│  ⚙️ ASSIGNMENT SETTINGS                                                                        │  </span></span>
<span class="line"><span>│  ┌─────────────────────────────────────────────────────────────────────────────────────────┐ │</span></span>
<span class="line"><span>│  │ Assignment: [Lab-07 ▼]  Fetches: lab-07/ folder (all files)                            │ │</span></span>
<span class="line"><span>│  │                                                                                         │ │</span></span>
<span class="line"><span>│  │ • Lab-01                                                                                │ │</span></span>
<span class="line"><span>│  │ • Lab-02                                                                                │ │</span></span>
<span class="line"><span>│  │ • Lab-07 ✓                                                                              │ │</span></span>
<span class="line"><span>│  │ • Assignment-3                                                                          │ │</span></span>
<span class="line"><span>│  │ • Final-Project                                                                         │ │</span></span>
<span class="line"><span>│  └─────────────────────────────────────────────────────────────────────────────────────────┘ │</span></span>
<span class="line"><span>│                                                                                               │</span></span>
<span class="line"><span>│  📋 STUDENT SUBMISSIONS (repos.json loaded once)                                             │</span></span>
<span class="line"><span>│  ┌─────────────┬────────────────────────────┬──────────────┬────────────────────────────────┐ │</span></span>
<span class="line"><span>│  │ Student     │ GitHub Repo                │ Status       │ Actions                        │ │</span></span>
<span class="line"><span>│  ├─────────────┼────────────────────────────┼──────────────┼────────────────────────────────┤ │</span></span>
<span class="line"><span>│  │ 👤 John Doe  │ johndoe/cp115-python      │ 🔄 Loading... │ [📖 View Code &amp; Test]         │ │</span></span>
<span class="line"><span>│  │ 👤 Jane Smith│ janesmith/cp115-python    │ ❌ 3/10 (30%) │ [📖 View Code &amp; Test]         │ │</span></span>
<span class="line"><span>│  │ 👤 Bob Wilson│ bobwilson/cp115-python    │ ✅ 9/10 (90%) │ [📖 View Code &amp; Test]         │ │</span></span>
<span class="line"><span>│  └─────────────┴────────────────────────────┴──────────────┴────────────────────────────────┘ │</span></span>
<span class="line"><span>└─────────────────────────────────────────────────────────────────────────────────────────────┘</span></span></code></pre></div><h2 id="tabbed-student-view" tabindex="-1">Tabbed Student View <a class="header-anchor" href="#tabbed-student-view" aria-label="Permalink to &quot;Tabbed Student View&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─── DETAILED VIEW: Jane Smith&#39;s Lab-07 ─────────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│  👤 Jane Smith │ 📂 janesmith/cp115-python/lab-07/ │ ❌ 3/10 Tests │ 🔗 GitHub              │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│ [exercise1.py*] [exercise2.py] [exercise3.py] [tests.py]                                   │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│                                                                                             │</span></span>
<span class="line"><span>│  # exercise1.py - Currently viewing                                                        │</span></span>
<span class="line"><span>│                                                                                             │</span></span>
<span class="line"><span>│   1  def calculate_average(nums):                                                          │</span></span>
<span class="line"><span>│   2      if not nums:                                                                      │</span></span>
<span class="line"><span>│   3          return 0                                                                      │</span></span>
<span class="line"><span>│   4      return sum(nums) / len(nums)                                                      │</span></span>
<span class="line"><span>│   5                                                                                        │</span></span>
<span class="line"><span>│   6  # Test this function                                                                  │</span></span>
<span class="line"><span>│   7  result = calculate_average([1, 2, 3])                                                 │</span></span>
<span class="line"><span>│   8  print(f&quot;Average: {result}&quot;)                                                           │</span></span>
<span class="line"><span>│                                                                                             │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│ [▶️ Run exercise1.py] [🧪 Run Tests]                                                       │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│ 🧪 Test Results (from tests.py):                                                          │</span></span>
<span class="line"><span>│ ✅ PASS: calculate_average basic test                                                      │</span></span>
<span class="line"><span>│ ❌ FAIL: calculate_average expected 2.0, got None                                          │</span></span>
<span class="line"><span>│ ✅ PASS: find_max works correctly                                                          │</span></span>
<span class="line"><span>│                                                                                             │</span></span>
<span class="line"><span>│ 🎯 Summary: 2/3 tests passed (67%)                                                        │</span></span>
<span class="line"><span>└─────────────────────────────────────────────────────────────────────────────────────────────┘</span></span></code></pre></div><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><h3 id="template-repository-approach" tabindex="-1">Template Repository Approach <a class="header-anchor" href="#template-repository-approach" aria-label="Permalink to &quot;Template Repository Approach&quot;">​</a></h3><ul><li><strong>Single template repo</strong>: Students fork teacher&#39;s complete folder structure</li><li><strong>Standardized structure</strong>: All assignments and tests in predictable locations</li><li><strong>Built-in tests</strong>: Tests travel with assignments, no separate test repository</li><li><strong>Import support</strong>: Multi-file assignments work correctly</li></ul><h3 id="batch-processing" tabindex="-1">Batch Processing <a class="header-anchor" href="#batch-processing" aria-label="Permalink to &quot;Batch Processing&quot;">​</a></h3><ul><li><strong>Folder-level fetching</strong>: Fetch entire assignment folder at once</li><li><strong>All files included</strong>: Student code, tests, and any supporting files</li><li><strong>Parallel execution</strong>: Process all students simultaneously</li><li><strong>Simple workflow</strong>: One assignment selection = complete results</li></ul><h3 id="tabbed-interface" tabindex="-1">Tabbed Interface <a class="header-anchor" href="#tabbed-interface" aria-label="Permalink to &quot;Tabbed Interface&quot;">​</a></h3><ul><li><strong>File-specific run buttons</strong>: Clear &quot;Run exercise1.py&quot; vs &quot;Run Tests&quot;</li><li><strong>Code focus</strong>: Full-screen code viewing with syntax highlighting</li><li><strong>Easy navigation</strong>: Quick switching between student files</li><li><strong>Multi-file support</strong>: Handle imports and dependencies correctly</li></ul><h3 id="print-based-testing" tabindex="-1">Print-Based Testing <a class="header-anchor" href="#print-based-testing" aria-label="Permalink to &quot;Print-Based Testing&quot;">​</a></h3><ul><li><strong>Simple test format</strong>: Use print statements with ✅ PASS / ❌ FAIL patterns</li><li><strong>Easy parsing</strong>: Dashboard parses output for pass/fail counts</li><li><strong>Flexible messaging</strong>: Teachers control exact error messages</li><li><strong>No framework complexity</strong>: Just basic Python prints</li></ul><h2 id="technical-implementation" tabindex="-1">Technical Implementation <a class="header-anchor" href="#technical-implementation" aria-label="Permalink to &quot;Technical Implementation&quot;">​</a></h2><h3 id="component-architecture" tabindex="-1">Component Architecture <a class="header-anchor" href="#component-architecture" aria-label="Permalink to &quot;Component Architecture&quot;">​</a></h3><ul><li><strong>StudentGrid.vue</strong>: Student list with status indicators</li><li><strong>StudentCard.vue</strong>: Individual student submission view with tabbed interface</li><li><strong>CodeTabs.vue</strong>: File tabs with syntax highlighting</li><li><strong>TestRunner.vue</strong>: Pyodide execution and result parsing</li><li><strong>AssignmentSelector.vue</strong>: Assignment dropdown with batch fetch trigger</li></ul><h3 id="github-api-strategy" tabindex="-1">GitHub API Strategy <a class="header-anchor" href="#github-api-strategy" aria-label="Permalink to &quot;GitHub API Strategy&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Batch fetch approach</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetchAssignment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">studentRepo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">assignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> folderContents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> github.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getContents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">studentRepo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">assignment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> folderContents; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// All files in assignment folder</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Process all students</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> results</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  studentRepos.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">repo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetchAssignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(repo, selectedAssignment))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="pyodide-integration" tabindex="-1">Pyodide Integration <a class="header-anchor" href="#pyodide-integration" aria-label="Permalink to &quot;Pyodide Integration&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Load all files into Pyodide filesystem</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> studentFiles) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pyodide.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writeFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file.name, file.content);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Execute tests with print parsing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pyodide.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runPython</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;exec(open(&quot;tests.py&quot;).read())&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> results</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parseTestOutput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(output); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Count ✅ PASS / ❌ FAIL</span></span></code></pre></div><h3 id="test-result-parsing" tabindex="-1">Test Result Parsing <a class="header-anchor" href="#test-result-parsing" aria-label="Permalink to &quot;Test Result Parsing&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parseTestOutput</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> passed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (output.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">match</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">✅ PASS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []).</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> failed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (output.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">match</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">❌ FAIL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []).</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { passed, failed, total: passed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> failed };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="implementation-benefits" tabindex="-1">Implementation Benefits <a class="header-anchor" href="#implementation-benefits" aria-label="Permalink to &quot;Implementation Benefits&quot;">​</a></h2><h3 id="simplified-architecture" tabindex="-1">Simplified Architecture <a class="header-anchor" href="#simplified-architecture" aria-label="Permalink to &quot;Simplified Architecture&quot;">​</a></h3><ul><li><strong>Single repository approach</strong>: No separate test repositories</li><li><strong>Batch processing</strong>: One API call gets complete assignment</li><li><strong>No state management</strong>: Simple props-down data flow</li><li><strong>Clear file structure</strong>: Predictable folder organization</li></ul><h3 id="reliable-execution" tabindex="-1">Reliable Execution <a class="header-anchor" href="#reliable-execution" aria-label="Permalink to &quot;Reliable Execution&quot;">​</a></h3><ul><li><strong>Multi-file support</strong>: Imports work correctly with template structure</li><li><strong>Error isolation</strong>: Individual student failures don&#39;t affect others</li><li><strong>Consistent testing</strong>: Same test environment for all students</li><li><strong>Print-based results</strong>: Simple, reliable output parsing</li></ul><h3 id="maintenance-simplicity" tabindex="-1">Maintenance Simplicity <a class="header-anchor" href="#maintenance-simplicity" aria-label="Permalink to &quot;Maintenance Simplicity&quot;">​</a></h3><ul><li><strong>Fewer components</strong>: Focused, single-responsibility components</li><li><strong>No caching complexity</strong>: Fresh fetch every time</li><li><strong>Standard API patterns</strong>: GitHub API with predictable responses</li><li><strong>Clear data flow</strong>: Template repo → GitHub API → Pyodide → Results</li></ul>`,46)]))}const g=a(t,[["render",p]]);export{k as __pageData,g as default};
